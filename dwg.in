#!/bin/sh
# create -v3 logs and dwg's with dwgwrite from DXF or JSON)
srcdir="@srcdir@"
top_builddir="@top_builddir@"

make -s -j4 -C src
make -s -j4 -C programs dwgwrite
@DSYMUTIL@ programs/dwgwrite
v=-v3
# dummy to please shellcheck
test -z "$v" && echo $top_builddir
args=
out=
ob="$b"

for d in "$@"; do
    case $d in
        -y) args="$args -y"
             ;;
        --force-free) args="$args $d"
             ;;
        -v*) v="$d"
             ;;
        *)
        if [ ! -f "$d" ]; then
            if [ -f "$srcdir/test/test-data/$d" ]
            then
                d="$srcdir/test/test-data/$d";
            else
                if [ -f "$srcdir/test/test-data/$d.dwg" ]
                then
                    d="$srcdir/test/test-data/$d.dwg"
                fi
            fi
        fi
        xd=$(dirname "$d")
        dir="_$(basename "$xd")"
        if [ "$dir" = "_test-data" ]; then dir=""; fi
        if [ "$dir" = "_td" ]; then dir=""; fi
        if [ "$dir" = "_." ]; then dir=""; fi
        case $(basename "$d") in
            *.dxf)  ext=dxf ;;
            *.DXF)  ext=dxf ;;
            *.json) ext=json ;;
            *.JSON) ext=json ;;
            *)      echo "Illegal extension for $d"; exit ;;
        esac
        b=$(basename "$d" .$ext)
        log="$b$dir.$ext.log"
        out="$b$dir.dwg"
        echo "programs/dwgwrite $args $v -o $out $d 2>$log"
        # shellcheck disable=SC2086
        @TIMEOUT_30@ @LTEXEC@ programs/dwgwrite $args "$v" -o "$out" "$d" 2>"$log"
        ;;
    esac
done
v=
args=
b=$ob
